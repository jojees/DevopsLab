version: "3.9"

services:
  minio:
    image: minio/minio
    ports: 
      - 9000:9000
      - 9001:9001
    volumes:
      - minio:/data
    entrypoint: 
      - sh
      - -euc
      - |
        mkdir -p /data/loki-data && \
        mkdir -p /data/loki-ruler && \
        minio server --console-address :9001 /data
    environment:
      - MINIO_ROOT_USER=minioaccess
      - MINIO_ROOT_PASSWORD=miniosecret
      - MINIO_PROMETHEUS_AUTH_TYPE=public
      - MINIO_UPDATE=off
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 15s
      timeout: 20s
      retries: 5
    networks:
      - operations

  lokiread:
    image: grafana/loki:2.7.1
    command: "-config.file=/etc/loki/config.yaml -target=read"
    ports:
      - 3101:3100
      - 7946
      - 9095
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    depends_on:
      - minio
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks: &operations-dns
      operations:
        aliases:
          - operations

  lokiwrite:
    image: grafana/loki:2.7.1
    command: "-config.file=/etc/loki/config.yaml -target=write"
    ports:
      - 3102:3100
      - 7946
      - 9095
    volumes:
      - ./loki-config.yaml:/etc/loki/config.yaml
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - minio
    networks:
      <<: *operations-dns

  lokipromtail:
    image: grafana/promtail:2.7.1
    volumes:
      - ./promtail-local-config.yaml:/etc/promtail/config.yaml:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /Users/jjohny/Library/Containers/com.docker.docker/Data/log/vm/dockerd.log:/var/log/hostdocker/dockerd.log:ro
      - /Users/jjohny/Library/Containers/com.docker.docker/Data/log/vm/containerd.log:/var/log/hostdocker/containerd.log:ro
    command: -config.file=/etc/promtail/config.yaml
    depends_on:
      - lokigateway
    networks:
      - operations

  lokigateway:
    image: nginx:latest
    depends_on:
      - lokiread
      - lokiwrite
    entrypoint:
      - sh
      - -euc
      - |
        cat <<EOF > /etc/nginx/nginx.conf
        user  nginx;
        worker_processes  5;  ## Default: 1

        events {
          worker_connections   1000;
        }

        http {
          resolver 127.0.0.11;

          server {
            listen             3100;

            location = / {
              return 200 'OK';
              auth_basic off;
            }

            location = /api/prom/push {
              proxy_pass       http://lokiwrite:3100\$$request_uri;
            }

            location = /api/prom/tail {
              proxy_pass       http://lokiread:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /api/prom/.* {
              proxy_pass       http://lokiread:3100\$$request_uri;
            }

            location = /loki/api/v1/push {
              proxy_pass       http://lokiwrite:3100\$$request_uri;
            }

            location = /loki/api/v1/tail {
              proxy_pass       http://lokiread:3100\$$request_uri;
              proxy_set_header Upgrade \$$http_upgrade;
              proxy_set_header Connection "upgrade";
            }

            location ~ /loki/api/.* {
              proxy_pass       http://lokiread:3100\$$request_uri;
            }
          }
        }
        EOF
        /docker-entrypoint.sh nginx -g "daemon off;"
    ports:
      - "3100:3100"
    healthcheck:
      test: ["CMD", "service", "nginx", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - operations

  lokigrafana:
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - lokigateway
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            access: proxy
            url: http://lokigateway:3100
            jsonData:
              httpHeaderName1: "X-Scope-OrgID"
            secureJsonData:
              httpHeaderValue1: "tenant1"
        EOF
        /run.sh
    ports:
      - "3000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - operations

  flog:
    image: mingrammer/flog
    command: -f json -d 1s -l
    networks:
      - operations




networks:
  operations:

volumes:
  minio:
    external: true
